Map

В контейнерах Map (отображения, словарь, ассоциативный массив, карты) хранятся два объекта:
 * ключ;
 * связанное с ключем значение.
Map позволяет искать объекты по ключу.
Объект, ассоциированный с ключом, называется значением.
И ключи, и значения являются объектами.
Ключи могут быть уникальными, а значения могут дублироваться. Некоторые отображения допускают пустые ключи и пустые значения.

Интерфейс Map соотносит уникальные ключи со значениями.
Ключ - это объект, который вы используете для последующего извлечения данных.
Задавая ключ и значение, вы можете помещать значения в объект отображения.
После того как это значение сохранено, вы можете получить его по ключу.

Основные методы - get() и put(), чтобы получить или поместить значения в отображение.

Интерфейс Map предоставляет три представления (view) хранящихся данных:
 * множество всех ключей;
 * множество всех значений;
 * множество объектов Entry, содержащих в себе и ключ и значение.

Отображения не поддерживают реализацию интерфейса Iterable, поэтому нельзя перебрать карту через цикл for в форме for-each.
Можно перебрать отдельно ключи или значения или объекти Entry.

Интерфейс SortedMap расширяет интерфейс Map и гарантирует, что элементы размещаются в возрастающем порядке значений ключей.

Интерфейс NavigableMap расширяет интерфейс SortedMap и определяет поведение отображения,
поддерживающее извлечение элементов на основе ближайшего соответствия заданному ключу или ключам.

Интерфейс Map.Entry позволяет работать с элементом отображения, в частности используется при переборе элементов.
Основные мотеды интерфейса Map.Entry:
 * equals(Object o) сравнение на равенство двух элементов;
 * getKey() получить ключ элемента;
 * getValue() получить значение элемента;
 * hashCode() получить хэш-код элемента;
 * setValue(V value) замена значения элемента на value.