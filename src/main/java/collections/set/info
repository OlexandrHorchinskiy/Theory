Set
HashSet, TreeSet и LinkedHashSet относятся к семейству Set.
В множествах Set каждый элемент хранится только в одном экземпляре,
а разные реализации Set используют разный порядок хранения элементов.
В HashSet порядок элементов определяется по сложному алгоритму и не гарантирует порядок в котором элементы вставлялись.
Если порядок хранения для вас важен, используйте контейнер TreeSet,
в котором объекты хранятся отсортированными по возрастанию в порядке сравнения
или LinkedHashSet с хранением элементов в порядке добавления.

Множества часто используются для проверки принадлежности,
чтобы вы могли легко проверить, принадлежить ли объект заданному множеству,
поэтому на практике обычно выбирается реализация HashSet, оптимизированная для быстрого поиска.

Сортування та перемішування не застосовується.


HashSet — реализация интерфейса Set, базирующаяся на HashMap. Внутри использует объект HashMap для хранения данных.
В качестве ключа используется добавляемый элемент, а в качестве значения — объект-пустышка (new Object()).
Из-за особенностей реализации порядок элементов не гарантируется при добавлении.

LinkedHashSet — отличается от HashSet только тем, что в основе лежит LinkedHashMap вместо HashSet.
Благодаря этому отличию порядок элементов при обходе коллекции является идентичным порядку добавления элементов.

TreeSet — аналогично другим классам-реализациям интерфейса Set содержит в себе объект NavigableMap,
что и обуславливает его поведение.
Предоставляет возможность управлять порядком элементов в коллекции при помощи объекта Comparator,
либо сохраняет элементы с использованием "natural ordering".
